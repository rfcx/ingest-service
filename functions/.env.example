NODE_ENV=development
PORT=3030

# Service configured for which platform (google => cloud functions + firestore + gcs) (amazon => lambda + redis + s3)
PLATFORM=amazon

# Amazon-specific keys (required when PLATFORM=amazon)
AWS_ACCESS_KEY_ID=
AWS_SECRET_KEY=
AWS_REGION_ID=
AWS_ACCOUNT_ID=
SQS_INGEST_TRIGGER_QUEUE_URL=https://sqs.eu-west-1.amazonaws.com/887044485231/ingest-service-upload-development
MONGO_HOSTNAME=localhost
MONGO_DB=admin
MONGO_USERNAME=admin-user
MONGO_PASSWORD=test

# Google-specific keys (required when PLATFORM=google)
GCLOUD_SUBSCRIPTION_NAME=
# Path to service account json file (required only for local development)
GOOGLE_APPLICATION_CREDENTIALS=

# Bucket in S3 or GCS that is the temporary storage for uploads
UPLOAD_BUCKET=rfcx-ingest-development
INGEST_BUCKET=rfcx-streams-development

# Limit on the upload to the temporary storage (~200mb)
MAX_UPLOAD_BYTES=209715200

# Ingestion to RFCx base API URL
API_HOST=https://staging-api.rfcx.org/

# Ingestion to RFCx by checkin endpoint (legacy), manual+audio endpoint (legacy), or stream (preferred)
INGEST_METHOD=stream (checkin | manual | stream)

# Manual ingest method (required when INGEST_METHOD=manual)
S3_INGEST_MANUAL_BUCKET=rfcx-guardian-ark-staging

# Local temporary directory where to save files
CACHE_DIRECTORY=/tmp/ingest-service/

AUTHZERO_CLIENT_ID=
AUTHZERO_CLIENT_SECRET=
AUTHZERO_DOMAIN=rfcx.eu.auth0.com
AUTHZERO_AUDIENCE=https://rfcx.org
AUTHZERO_GRANT_TYPE=client_credentials

AUTOUPDATE_ENABLED=false
AUTOUPDATE_GITHUB_TOKEN=
AUTOUPDATE_GITHUB_REPO=rfcx/ingest-app
AUTOUPDATE_GITHUB_SECRET=

ARBIMON_ENABLED=false
ARBIMON_HOST=

PROMETHEUS_ENABLED=false
